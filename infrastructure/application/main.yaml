AWSTemplateFormatVersion: "2010-09-09"

# Application stack creation perquisites: First create a VPC stack RDS Stack, S3 Stack, and two EC2 Key pairs for backend and bastion host
Description: >
  This template creates an Elastic Load Balancer for the backend application.
  The load balancer has a simple health check against the default app health route.
  It also provisions an Auto Scaling Group that creates one or more Amazon EC2 instance running a Node.js backend application.
  An Elastic Load Balancing load balancer is attached to the Auto Scaling group, which acts as a single point of contact for all incoming traffic to the Auto Scaling group.
  The application scales automatically based on CPU utilization of the backend servers and is spread across multiple Availability Zones for high availability.
  Notifications will be sent to the operator email address on scaling events.

Parameters:
  VpcStackName:
    Type: String
    Description: Name of an active CloudFormation stack that contains the networking resources, such as the subnet and security group, that will be used in this stack.
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"

  # auto-scaling.yaml parameters
  BackendKeyName:
    Description: The EC2 Key Pair to allow SSH access to the backend instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  InstanceType:
    Description: Backend EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.nano
    ConstraintDescription: must be a valid EC2 instance type.

  DbHostname:
    Description: The hostname of the database
    Type: String

  DbName:
    Description: The database name
    Type: String
    MinLength: "1"
    MaxLength: "64"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.

  DbUsername:
    NoEcho: true
    Description: Username for MySQL database access
    Type: String
    MinLength: 1
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  DbPassword:
    NoEcho: true
    Description: Password MySQL database access
    Type: String
    MinLength: 8
    MaxLength: 41
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters.

  EmailApiKey:
    NoEcho: true
    Description: API key for Sending Emails
    Type: String

  MailFromName:
    Type: String

  MailFromEmail:
    Type: String

  AccessTokenSecretKey:
    NoEcho: true
    Description: JWT access token secret
    Type: String

  S3BucketName:
    Type: String
    Description: Name of an existing S3 bucket

  OperatorEmail:
    Description: Email address to notify if there are any scaling operations
    Type: String
    AllowedPattern: "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)"
    ConstraintDescription: must be a valid email address.

  # bastion-host.yaml parameters
  BastionHostKeyName:
    Description: EC2 key pair name for bastion host SSH access
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  LoadBalancersStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./load-balancers.yaml
      Parameters:
        VpcStackName: !Ref VpcStackName

  Ec2AutoScalingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./ec2-auto-scaling.yaml
      Parameters:
        VpcStackName: !Ref VpcStackName
        LoadBalancerTargetGroups: !GetAtt LoadBalancersStack.Outputs.BackendLoadBalancerTargetGroupArn
        KeyName: !Ref BackendKeyName
        InstanceType: !Ref InstanceType
        DbHostname: !Ref DbHostname
        DbName: !Ref DbName
        DbUsername: !Ref DbUsername
        DbPassword: !Ref DbPassword
        EmailApiKey: !Ref EmailApiKey
        MailFromName: !Ref MailFromName
        MailFromEmail: !Ref MailFromEmail
        AccessTokenSecretKey: !Ref AccessTokenSecretKey
        S3BucketName: !Ref S3BucketName
        OperatorEmail: !Ref OperatorEmail

  BastionHostStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./bastion-host.yaml
      Parameters:
        VpcStackName: !Ref VpcStackName
        KeyName: !Ref BastionHostKeyName

Outputs:
  BackendLoadBalancerUrl:
    Description: The URL of the app
    Value: !GetAtt LoadBalancersStack.Outputs.BackendLoadBalancerUrl
